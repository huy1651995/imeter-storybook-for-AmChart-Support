export declare type UnbindFunction = () => void;
export declare type ComputeCallback = (result?: Result) => void;
export interface Sizes {
    vh: number;
    windowHeight: number;
    offset: number;
    isNeeded: boolean;
    value: number;
}
export declare type ComputeSizeMethod = () => Sizes;
export interface Configuration {
    cssVarName?: string;
    redefineVh?: boolean;
    method?: ComputeSizeMethod;
    force?: boolean;
    bind?: boolean;
    updateOnTouch?: boolean;
    onUpdate?: ComputeCallback;
}
export interface Result extends Sizes {
    unbind: UnbindFunction;
    recompute: ComputeSizeMethod;
}
declare const _default: (overrides?: {}) => {
    shape: import("@material-ui/core/styles/shape").Shape;
    breakpoints: import("@material-ui/core/styles/createBreakpoints").Breakpoints;
    direction: "ltr" | "rtl";
    mixins: import("@material-ui/core/styles/createMixins").Mixins;
    overrides: import("@material-ui/core/styles/overrides").Overrides;
    palette: import("@material-ui/core/styles/createPalette").Palette;
    props: import("@material-ui/core/styles/props").ComponentsProps;
    shadows: import("@material-ui/core/styles/shadows").Shadows;
    spacing: import("@material-ui/core/styles/createSpacing").Spacing;
    transitions: import("@material-ui/core/styles").Transitions;
    typography: import("@material-ui/core/styles/createTypography").Typography;
    zIndex: import("@material-ui/core/styles/zIndex").ZIndex;
    unstable_strictMode: boolean;
} & {
    layout: {
        vh: (v: number, opts: any) => string | number;
    };
};
export default _default;
