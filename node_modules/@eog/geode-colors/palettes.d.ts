import { Theme } from '@material-ui/core';
import { Palette, PaletteColor } from '@material-ui/core/styles/createPalette';
import * as colors from './colors';
export declare const geodeColors: {
    blue: GeodeColorObject;
    blueGreen: GeodeColorObject;
    blueViolet: GeodeColorObject;
    coolGray: GeodeColorObject;
    gray: GeodeColorObject;
    green: GeodeColorObject;
    orange: GeodeColorObject;
    red: GeodeColorObject;
    redOrange: GeodeColorObject;
    redViolet: GeodeColorObject;
    violet: GeodeColorObject;
    yellow: GeodeColorObject;
    yellowGreen: GeodeColorObject;
    yellowOrange: GeodeColorObject;
    white: GeodeColorObject;
    black: GeodeColorObject;
};
export declare const p3geodeColors: {
    blue: GeodeColorObject;
    blueGreen: GeodeColorObject;
    blueViolet: GeodeColorObject;
    coolGray: GeodeColorObject;
    gray: GeodeColorObject;
    green: GeodeColorObject;
    orange: GeodeColorObject;
    red: GeodeColorObject;
    redOrange: GeodeColorObject;
    redViolet: GeodeColorObject;
    violet: GeodeColorObject;
    yellow: GeodeColorObject;
    yellowGreen: GeodeColorObject;
    yellowOrange: GeodeColorObject;
    white: GeodeColorObject;
    black: GeodeColorObject;
};
export declare type GeodeColorObject = {
    [key in number | string]: string;
};
export declare type GeodeColorWheel = {
    [name in keyof typeof colors]: GeodeColorObject;
};
export interface ExtendedTheme extends Theme {
    layout: {
        vh: (percent: number, options?: {
            subtract: number[];
        }) => number;
    };
    geode: GeodeColorWheel;
    palette: GeodePalette;
}
export declare type ChartColorsPalette = {
    ruby: string;
    amber: string;
    citrine: string;
    emerald: string;
    amazonite: string;
    apatite: string;
    sapphire: string;
    amethyst: string;
    iolite: string;
    graphite: string;
    obsidian: string;
    calcite: string;
    streams: {
        streamBoe: string;
        streamGas: string;
        streamNgl: string;
        streamOil: string;
        streamWater: string;
    };
};
export interface ExtendedPalleteColor extends PaletteColor {
    background?: string;
    hover?: string;
    selected?: string;
    focused?: string;
}
export interface GeodePalette extends Palette {
    borders: {
        divider: string;
        outline: string;
    };
    chartColors: ChartColorsPalette;
    coloredBackgrounds: {
        primary: string;
        secondary: string;
        customUI: string;
        info: string;
        success: string;
        warning: string;
        error: string;
    };
    coloredText: {
        info: string;
        success: string;
        warning: string;
        error: string;
    };
    common: {
        black: string;
        white: string;
    };
    miscellaneous: {
        backdrop: string;
        divider: string;
        filledInput: string;
        tooltip: string;
        snackBar: string;
        ratingFull: string;
        ratingUnfilled: string;
    };
    stroke: {
        divider: string;
        stroke: string;
        hover: string;
        disabled: string;
    };
    customUI: ExtendedPalleteColor;
    primary: ExtendedPalleteColor;
    secondary: ExtendedPalleteColor;
    info: ExtendedPalleteColor;
    success: ExtendedPalleteColor;
    warning: ExtendedPalleteColor;
    error: ExtendedPalleteColor;
}
export declare const lightPalette: Partial<GeodePalette>;
export declare const darkPalette: Partial<GeodePalette>;
export declare type GeodeThemePalette = {
    add: string;
    addRemove: string;
    appName01: string;
    backgroundPrimary: string;
    backgroundQuaternary: string;
    backgroundSecondary: string;
    backgroundTertiary: string;
    buttonDisabled: string;
    buttonInactive: string;
    cardBackgroundPrimary: string;
    error: string;
    errorSuccess: string;
    geode: string;
    labelPrimary: string;
    labelQuaternary: string;
    labelSecondary: string;
    labelTertiary: string;
    premiumWell: string;
    priorityHigh: string;
    priorityLow: string;
    priorityMedium: string;
    separator: string;
    spreadsheetRow: string;
    spreadsheetRowAlternate: string;
    spreadsheetRowSelected: string;
    streamBoe: string;
    streamGas: string;
    streamNgl: string;
    streamOil: string;
    streamWater: string;
    tableviewBackground: string;
    tableviewBackgroundSecondary: string;
    tag01: string;
    tag02: string;
    tag03: string;
    tag04: string;
    tag05: string;
    tag06: string;
};
export declare const darkGeodePalette: GeodeThemePalette;
export declare const p3DarkGeodePalette: GeodeThemePalette;
export declare const lightGeodePalette: GeodeThemePalette;
export declare const p3LightGeodePalette: GeodeThemePalette;
